@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -khtml-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

@mixin box-shadow($arguments...) {
  -webkit-box-shadow: $arguments;
  -moz-box-shadow: $arguments;
  box-shadow: $arguments;
}

@mixin box-sizing() {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

@mixin background-clip($arguments) {
  -webkit-background-clip: $arguments;
  -moz-background-clip: $arguments;
  background-clip: $arguments;
}

@mixin linear-gradient($color1, $color2) {
  background: $color1;
  background: -moz-linear-gradient(top, $color1 0%, $color2 100%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$color1), color-stop(100%,$color2));
  background: -webkit-linear-gradient(top, $color1 0%,$color2 100%);
  background: -o-linear-gradient(top, $color1 0%,$color2 100%);
  background: -ms-linear-gradient(top, $color1 0%,$color2 100%);
  background: linear-gradient(top, $color1 0%,$color2 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$color1}', endColorstr='#{$color2}',GradientType=0 );
}

@mixin linear-gradient-with-icon($icon, $color1, $color2) {
  background: $color1;
  background: $icon, -moz-linear-gradient(top, $color1 0%, $color2 100%);
  background: $icon, -webkit-gradient(linear, left top, left bottom, color-stop(0%,$color1), color-stop(100%,$color2));
  background: $icon, -webkit-linear-gradient(top, $color1 0%,$color2 100%);
  background: $icon, -o-linear-gradient(top, $color1 0%,$color2 100%);
  background: $icon, -ms-linear-gradient(top, $color1 0%,$color2 100%);
  background: $icon, linear-gradient(top, $color1 0%,$color2 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$color1}', endColorstr='#{$color2}',GradientType=0 );
}

@mixin linear-gradeint-three($color1, $percent1, $color2, $percent2, $color3, $percent3: 100%) {
  background: $color1;
  background:-moz-linear-gradient(top, $color1 $percent1, $color2 $percent2, $color3 $percent3);
  background:-webkit-gradient(linear, left top, left bottom, color-stop($percent1,$color1), color-stop($percent2,$color2), color-stop($percent3,$color3));
  background:-webkit-linear-gradient(top,$color1 $percent1,$color2 $percent2,$color3 $percent3);
  background:-o-linear-gradient(top,$color1 $percent1,$color2 $percent2,$color3 $percent3);
  background:-ms-linear-gradient(top,$color1 $percent1,$color2 $percent2,$color3 $percent3);
  background:linear-gradient(top,$color1 $percent1,$color2 $percent2,$color3 $percent3);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$color1}',endColorstr='#{$color3}',GradientType=0);
}

@mixin radial-gradient($color1, $color2, $color3, $percent) {
  background: $color1;
  background: -moz-radial-gradient($color1, $color2 $percent, $color3);
  background: -ms-radial-gradient($color1,$color2 $percent, $color3);
  background: -o-radial-gradient($color1,$color2 $percent, $color3);
  background: -webkit-radial-gradient($color1, $color2 $percent, $color3);
  background: radial-gradient($color1, $color2 $percent, $color3);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$color1}', endColorstr='#{$color3}',GradientType=0);
}

@mixin transition($arguments...) {
  -webkit-transition: $arguments;
  -moz-transition: $arguments;
  -o-transition: $arguments;
  transition: $arguments;
}

@mixin transition-delay($value) {
  -webkit-transition-delay: $value;
  -moz-transition-delay: $value;
  -o-transition-delay: $value;
  -ms-transition-delay: $value;
  transition-delay: $value;
}

@mixin transform($arguments) {
  -webkit-transform: $arguments;
  -moz-transform: $arguments;
  -o-transform: $arguments;
  transform: $arguments;
}

@mixin animation($arguments) {
  -webkit-animation: $arguments;
  -moz-animation: $arguments;
  -ms-animation: $arguments;
  -o-animation: $arguments;
  animation: $arguments;
}

@mixin animation-delay($sec) {
  -webkit-animation-delay: $sec;
  -moz-animation-delay: $sec;
  animation-delay: $sec;
}

@mixin animation-duration($sec) {
  -webkit-animation-duration: $sec;
  -moz-animation-duration: $sec;
  animation-duration: $sec;
}

@mixin animation-name($name) {
  -webkit-animation-name: $name;
  -moz-animation-name: $name;
  animation-name: $name;
}

@mixin background-size($arguments...) {
  -webkit-background-size: $arguments;
  -moz-background-size: $arguments;
  -o-background-size: $arguments;
  background-size: $arguments;
}

@mixin scrollbar($background: $orange, $size: 10px) {
  &::-webkit-scrollbar {
    width: $size;
    height: $size;
    -webkit-appearance: none;
  }

  &::-webkit-scrollbar-track {
    background: #eee;
  }

  &::-webkit-scrollbar-thumb {
    background: $background;
    &:hover {
      background: darken($background, 10%);
    }
  }
}

@mixin opacity($value) {
  $percent: $value * 100;
  opacity: $value;
  -khtml-opacity: $value;
  -moz-opacity: $value;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=${value})";
  filter: "alpha(opacity=#{$percent})";
}

@mixin placeholder($color) {
  :-moz-placeholder {
    color: $color;
  }
  ::-webkit-input-placeholder {
    color: $color;
  }
}

@mixin user-select($value) {
  -webkit-user-select: $value;
  -moz-user-select: $value;
  -ms-user-select: $value;
  -o-user-select: $value;
  user-select: $value;
}

@mixin appearance($value) {
  appearance: $value;
  -moz-appearance: $value;
  -webkit-appearance: $value;
}

@mixin keyframe($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @-o-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

@mixin flex-box() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex-flow($value) {
  -webkit-flex-flow: $value;
  flex-flow: $value;
}

@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex:  $values;
  -webkit-flex:  $values;
  -ms-flex:  $values;
  flex:  $values;
}

@mixin flex-direction($value) {

  -webkit-flex-direction: $value;
  -ms-flex-direction: $value;
  flex-direction: $value;

  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;

  @if $value == 'row' {
    -webkit-box-orient: horizontal;
    -moz-box-orient: horizontal;
    box-orient: horizontal;
  } @else {
    -webkit-box-orient: vertical;
    -moz-box-orient: vertical;
    box-orient: vertical;
  }
}

@mixin order($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}

@mixin align-items($align: center) {
  -webkit-flex-align: $align;
  -ms-flex-align: $align;
  -webkit-align-items: $align;
  align-items: $align;
}
